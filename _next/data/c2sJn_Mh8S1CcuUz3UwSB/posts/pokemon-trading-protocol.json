{"pageProps":{"post":{"title":"Pokemon Trading Protocol","date":"2025-01-01","slug":"pokemon-trading-protocol","excerpt":"https://bsky.app/profile/bread.codes/post/3lcrkdbj7tk2m","content":"https://bsky.app/profile/bread.codes/post/3lcrkdbj7tk2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhnk2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhnl2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhnm2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhnn2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhno2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjhnp2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjimx2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdbjjm72m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdcok6h2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdcouw72m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegqyx2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegqyy2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegrya2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegryb2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegryc2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegryd2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdegtwt2m\n\nhttps://bsky.app/profile/bread.codes/post/3lcrkdermo32m","categories":["pokemon","gameboy","game boy","retro-computing"],"skeets":[{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbj7tk2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbj7tk2m","text":"I was not the first person to do it, but I reverse engineered the Pokémon Gen 1 trading protocol some time ago\n\nI reminisce about this project often, so I thought I'd make a thread about how it works!\n\n#reverseengineering #retrogamedev #retrogaming #pokemon\n\n[1/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.054Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhnk2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhnk2m","text":"So the first thing to understand is that the Game Boy used a bastardized version of SPI for communication, just without the Chip Select line since the Game Boy could be connected to only one other device... but if that device is another Game Boy, who's in control of the clock?\n\n[2/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.055Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhnl2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhnl2m","text":"The quirky part of this is that they have a pecking order in Pokémon to decide who's in control. The first one to successfully send a byte becomes the Primary (formerly \"master\") and the receiver becomes the Secondary (formerly \"slave\")... how do you make this consistent?\n\n[3/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.056Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhnm2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhnm2m","text":"Well, you of course give up control, and you never send a byte until the other GB takes control. This is how I managed the state of the trades, because by always waiting for the other GB, the Primary always polled when ready. Now what?\n\n[4/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.057Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhnn2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhnn2m","text":"Well, the Primary sends packets to check if we're still there, which we acknowledge (0x00) in a response. You do this until the other GB reports that it is at a Pokémon Center and is at the link counter. When they are ready, we start the handshake process.\n\n[5/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.058Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhno2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhno2m","text":"Here's where the actual protocol starts.  Since we're the Secondary, we are being polled by the Primary so that we don't accidentally go too fast\n\nNow we say we are also at the link counter and want to trade.\n\n[6/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.059Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjhnp2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjhnp2m","text":"We wait for a READY (0xFD) and respond READY. We do it again... and again... and again, but this time we respond with a 0x00. I don't actually know why this was necessary 4 times.\n\nNow we are in a \"waiting\" state. This state is used to send our Pokemon in their entirety to the other GB.\n\n[7/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.060Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjimx2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjimx2m","text":"Here's where we take a detour from the protocol itself\n\nWe don't just send basic info about our 'mons, we send every byte of the Pokemon almost exactly as they would be in our party and some info about ourselves.\n\n[8/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.061Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdbjjm72m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdbjjm72m","text":"In short, here is the order of what we are sending:\n- Trainer Name (11 bytes, 0x50 terminated string [in English])\n- Selected Pokemon (1 byte for num of mons in party + 6 bytes each representing the mons' true ID)\n- Party Member (6 whole Pokemon, each 44 bytes [discussed later])\n\n[9/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.062Z","embed":{"$type":"app.bsky.embed.images","images":[{"alt":"A C code block showing the packet structure of a trade","aspectRatio":{"width":866,"height":386},"image_url":"/bsky/images/pokemon-trading-protocol-8-0.jpg"}]},"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdcok6h2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdcok6h2m","text":"[cont]\n- OG Trainer Names (an array containing 6 names, each 11 bytes long and 0x50 terminated [in english], with the same index as the party mons)\n- Mon Nicknames (^ read above note)\n\n[10/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.063Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdcouw72m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdcouw72m","text":"To explain how the mons are structured, here is the struct I made [left] and the function that turns the struct to an array of bytes (because I was using u32 for u24 numbers, u8 for nibbles, and the wrong endianness, it didn't align) [right]\n\nI wish I had space to explain this better\n\n[11/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.064Z","embed":{"$type":"app.bsky.embed.images","images":[{"alt":"A C code block showing the structure of Pokemon in Red, Blue, Green, Yellow. Note that there are comments in the code, which I will refer to, but will also explain","aspectRatio":{"width":1692,"height":2000},"image_url":"/bsky/images/pokemon-trading-protocol-10-0.jpg"},{"alt":"C code showing how the previous structure is converted to an array of bytes","aspectRatio":{"width":1587,"height":2000},"image_url":"/bsky/images/pokemon-trading-protocol-10-1.jpg"}]},"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegqyx2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegqyx2m","text":"For those who are not sight impaired (sorry for the poor alt text), you might be noticing my comments about how this matches the save file. Well, that's because Pokémon just copies your Pokémon directly from RAM and sends all of it over the wire.\n\n[12/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.065Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegqyy2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegqyy2m","text":"Interesting bits:\n- Mons can have 2 types, but if they don't, they usually have the same type twice\n- catch_rate_or_held_item is a byte that is different in Gen 1 & 2. Held items didn't exist until Gen 2, and they dropped catch rate because it was redundant\n\n[13/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.066Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegrya2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegrya2m","text":"[cont]\n- Experience is complicated math with several variables. I just used EXP calculators\n- EVs are 2 bytes long, but IVs are a nibble (4 bits / ½ byte)\n\nLet's get back to the protocol. Did you forget about it?\n\n[14/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.067Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegryb2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegryb2m","text":"We have sent our mons to each other after 197 messages. Now the Primary tells us it's status with a byte, which should have bits 5 and 6 set to high indicating it is ready. If it sends an ERROR (0x6f), we start over. Otherwise, bits 0-3 indicate the index of the mon it wants to trade.\n\n[15/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.068Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegryc2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegryc2m","text":"Since we are faking mons on the Secondary, we can send whatever we want, I just fill my party with Mews while we're trading info, and send index 0 (status 0x60) when it's time.\n\nOnce we have responded with this status, the trade has started.\n\n[16/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.069Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegryd2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegryd2m","text":"The Primary sends 0x00, we respond with 0x00, and we repeat until the animation is done.\n\nAfter that? We're done! We *should* restart the process and have some handling for trading again, but this is where I end my explanation.\n\n[17/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.070Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdegtwt2m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdegtwt2m","text":"Thank you to #GBDK (gbdk-2020) (and @bbbbbr.bsky.social as a major maintainer, please follow them) for enabling my project\nThank you to Bulbapedia and it's maintainers for documenting the Party and Bill's PC Pokémon data structure\nThank you for reading! lmk if you like this type of content\n\n[18/18]","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.071Z","embed":null,"indexedAt":null},{"url":"https://bsky.app/profile/bread.codes/post/3lcrkdermo32m","uri":"at://did:plc:mkvb2iguo4rjzi4guolw7bbt/app.bsky.feed.post/3lcrkdermo32m","text":"Fun tidbits:\n\nI accidentally found a way to destroy someone's save file. A real GB virus by corrupting the mon just right.\n\nI originally did this on a Pi, but decided that the barrier for others doing this was too high. I ended up rewriting this for the GB to be run from a flash cartridge","author":{"did":"did:plc:mkvb2iguo4rjzi4guolw7bbt","handle":"bread.codes","displayName":"breadcodes - GBA dev","avatar":"https://cdn.bsky.app/img/avatar/plain/did:plc:mkvb2iguo4rjzi4guolw7bbt/bafkreiflkzhj5nlxibsolqlhhpjgevscfoz74xsll3o4p7ytnzcsllokdi@jpeg"},"createdAt":"2024-12-08T06:08:09.072Z","embed":null,"indexedAt":null}]}},"__N_SSG":true}